{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","oldArray","type","value","onChange","target","propType","PropTypes","string","isRequired","getGifs","category","a","url","encodeURI","fetch","dataGifs","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loadding","state","setState","useEffect","then","setTimeout","useFetchGifs","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC1CN,EAAc,MAKlB,SACI,uBACIO,KAAQ,OACRC,MAAUT,EACVU,SAjBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,aAsBhCZ,EAAYe,SAAW,CACnBd,cAAee,IAAUC,OAAOC,Y,mCC9BvBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEII,MAAOF,GAFX,cAEbG,EAFa,gBAGEA,EAASC,OAHX,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECFwB,SAACA,GAEzB,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNa,UAAU,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACNxB,EAASC,GAAWwB,MAAM,SAAAhB,GACtBiB,YAAW,WACPH,EAAS,CACLf,KAAKC,EACLY,UAAU,MAEf,WAER,CAACpB,IAEGqB,EDhBuBK,CAAa1B,GAA9BU,EAAb,EAAOH,KAAWa,EAAlB,EAAkBA,SAElB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAY,mBAAGJ,UAAU,mCAAb,wBACd,qBAAKA,UAAU,YAAf,SAEQN,EAAID,KAAI,SAACC,GAAD,OACJ,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEmBxBgB,G,MA7BA,WAIX,MAAoC7C,mBAAS,CAAC,SAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAMA,OACI,gCACI,2CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ+C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,aCtBjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.66aa7c68.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setinputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 0){\r\n            setCategories(oldArray => [inputValue, ...oldArray]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type  = 'text'\r\n                value = { inputValue }\r\n                onChange = { ( handleInputChange ) }\r\n            />   \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propType = {\r\n    setCategories: PropTypes.string.isRequired\r\n}","\r\nexport const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=K1JRWy8nWR754BvDYszwhGvAoLfebXuz`;\r\n    const dataGifs = await fetch( url );\r\n    const {data} = await dataGifs.json();\r\n    const gifs = data.map( gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    // console.log({id, title, url})\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: gif, loadding} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\" >{category}</h3>\r\n            { loadding && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    gif.map((gif) => (\r\n                        <GifGridItem\r\n                            key = {gif.id}\r\n                            {...gif}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loadding: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category ).then( gifs => {\r\n            setTimeout(() => {\r\n                setState({\r\n                    data:gifs,\r\n                    loadding: false\r\n                });\r\n            }, 1500);    \r\n        } );\r\n    }, [category]);\r\n\r\n    return state; //{ data: [], loading: true}\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n// import PropTypes from 'prop-types'\r\nimport './index.css';\r\n\r\nconst GifApp = () => {\r\n\r\n    // const categories = ['Futbol', 'Basquetball', 'Volleyball'];\r\n\r\n    const [categories, setCategories] = useState(['Goku']);    \r\n    \r\n    // const handleAdd = () => {\r\n    //     setCategories(oldArray => [...oldArray, 'newElement']);\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Gif - App</h2>\r\n            <AddCategory setCategories={setCategories}  />\r\n            <hr/>\r\n            {/* <button onClick={handleAdd}>Add</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />)    \r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifApp from './GifApp';\n\nReactDOM.render(\n    <GifApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\n"],"sourceRoot":""}